package com.euc.flash.events{           import flash.events.Event;        public class ModelChangeEvent extends Event     {    	public static const PROPERTY_CHANGED:String = "onPropertyChanged";                private var _source:Object;        private var _property:String;        private var _oldValue:*;        private var _newValue:*;        		/**		 *  Constructor.		 */        public function ModelChangeEvent( src:Object, prop:String, newVal:*, oldVal:*=null)        {        	super(PROPERTY_CHANGED, bubbles, cancelable);        	        	_source = src;        	_property = prop;        	_oldValue = oldVal;        	_newValue = newVal;        }        		/**		 *  getter source		 */         public function get source():Object        {            return _source;        }        		/**		 *  getter property		 */        public function get property():String        {            return _property;        }        		/**		 *  getter oldValue		 */        public function get oldValue():*        {            return _oldValue;        }        		/**		 *  getter newValue		 */        public function get newValue():*        {            return _newValue;        }        		/**		 *  override clone.		 */ 		override public function clone():Event		{			return new ModelChangeEvent( source, property, newValue, oldValue );		}				/**		 *  override toString.		 */         override public function toString () : String         {        	return '[ModelChangeEvent] ' + property + '=' + newValue;         }    }}